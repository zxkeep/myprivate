<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder location="classpath*:com/keepzx/config/*.properties, classpath:/spring/spring-servlet.properties"
                                  ignore-unresolvable="true"/>

    <context:component-scan base-package="com.keepzx"/>

    <tx:annotation-driven/>

    <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.master.url}"/>
        <property name="username" value="${jdbc.master.username}"/>
        <property name="password" value="${jdbc.master.password}"/>
        <property name="filters" value="${jdbc.pool.filters}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <property name="initialSize" value="${jdbc.pool.initialSize}"/>
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.pool.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.pool.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.pool.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${jdbc.pool.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${jdbc.pool.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="connectionInitSqls" value="${jdbc.pool.connectionInitSqls}"/>
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="180" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
    </bean>
    <bean id="slaveDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.slave.url}"/>
        <property name="username" value="${jdbc.slave.username}"/>
        <property name="password" value="${jdbc.slave.password}"/>
        <property name="filters" value="${jdbc.pool.filters}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <property name="initialSize" value="${jdbc.pool.initialSize}"/>
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.pool.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.pool.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.pool.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${jdbc.pool.poolPreparedStatements}"/>

        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="180" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${jdbc.pool.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="connectionInitSqls" value="${jdbc.pool.connectionInitSqls}"/>
    </bean>
    <bean id="dataSource" class="com.keepzx.config.db.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!-- write -->
                <entry key="master" value-ref="masterDataSource"/>
                <!-- read -->
                <entry key="slave" value-ref="slaveDataSource"/>
            </map>

        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.keepzx.mapper.base,com.scxinglin.mapper.business"/>
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.MySqlMapper
            </value>
        </property>
    </bean>



    <bean name="poolTaskScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
        <property name="removeOnCancelPolicy" value="true" />
        <property name="poolSize" value="10" />
    </bean>


    <import resource="spring/spring-servlet.xml"/>
</beans>